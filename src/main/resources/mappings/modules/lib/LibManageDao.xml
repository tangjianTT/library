<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.library.modules.lib.dao.LibManageDao">
    
	<sql id="libManageColumns">
		a.id AS "id",
		a.office_id AS "office.id",
		a.book_id AS "bookId",
		a.book_name AS "bookName",
		a.book_classify AS "bookClassify",
		a.book_place AS "bookPlace",
		a.count AS "count",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		o2.name AS "office.name"
	</sql>
	
	<sql id="libManageJoins">
		LEFT JOIN sys_office o2 ON o2.id = a.office_id
	</sql>
    
	<select id="get" resultType="LibManage">
		SELECT 
			<include refid="libManageColumns"/>
		FROM lib_manage a
		<include refid="libManageJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="LibManage">
		SELECT 
			<include refid="libManageColumns"/>
		FROM lib_manage a
		<include refid="libManageJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="office != null and office.id != null and office.id != ''">
				AND a.office_id = #{office.id}
			</if>
			<if test="bookId != null and bookId != ''">
				AND a.book_id = #{bookId}
			</if>
			<if test="bookName != null and bookName != ''">
				AND a.book_name = #{bookName}
			</if>
			<if test="bookClassify != null and bookClassify != ''">
				AND a.book_classify = #{bookClassify}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="LibManage">
		SELECT 
			<include refid="libManageColumns"/>
		FROM lib_manage a
		<include refid="libManageJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO lib_manage(
			office_id,
			book_id,
			book_name,
			book_classify,
			book_place,
			count,
			create_date,
			create_by,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{office.id},
			#{bookId},
			#{bookName},
			#{bookClassify},
			#{bookPlace},
			#{count},
			#{createDate},
			#{createBy.id},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE lib_manage SET 	
			office_id = #{office.id},
			book_id = #{bookId},
			book_name = #{bookName},
			book_classify = #{bookClassify},
			book_place = #{bookPlace},
			count = #{count}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE lib_manage SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<select id="getLib" resultType="LibManage">
		SELECT
		  *
		FROM
		  lib_manage
		WHERE
		  del_flag = '0' AND book_id = #{bookId}
	</select>
</mapper>